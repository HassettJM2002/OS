Linux Process Validity

Kernel Vs User Space
-  Kenrel runs in its own memory space
-  user mode restricts access so that it keeps it more secure

Proc Owenrship
-  EUID -> defines the access rights for a process
-  RUID -> which user can do what

System Calls
-  Interaction between a process and kernel, process calls the kernel
- Common system calls
    fork() and exec()

Orphan Processes
-  Parent process exited, adopted by sbiin/init ppid
-  zomvie - compelted process, cant be terminated

Daemons (Services)
  Programs that run in the background
  man cron to see example of a daemon running during boot
  Persistence - should be run for duration of system operation
  Malicous process are sometimes orphaned and named to look like a daemon process

Jobs
  Display List of Jobs running in the backround
  fg / pg push pull jobs from the foreground / bakground
  kill %<job number>
  ctrl - z or kill -19 stop /suspend the job
  kill -9 <pid> or pkill -9 <name>

Cron Jobs
  Cron Daemons are the linux version of scheduled jobs
  checks 

    /var/spool/cron -> use cronjobs
    /etc/cron.d -> sysstem cronjobs

    Two types of cron jobs
      system -> affects the whole system, ran as root
      User -> crontab can creaeted crontab

Cron Jobs (Continued)
    crontab -u [user] <file>

Cron Syntax
  Day of Week / Month / Day of Month / Hour / Minute

  0-6          1-12        1-31        0-23    0-59

System Cronjob /etc/crontab

Users in the /var/ directory 


./daemon.sh

usermode daemons : all daemons are spawned from parent id 1
Look for the commands and see if the command is legit


Source files
/etc/init.d

cron startup script
/etc/init/cron

stop

/etc/init.d/cron stop
service cron start
systemctl restart cron.service

everything on linux system is a file, running process is a file

Orphans habe a ppid of 1

zombie process, the memory it will be using is  0, its hangng up, defunct

Get Processes
    ps -a / elf

    top, F key

    htop, can see the tree, change colors and stuff, cool

PS -elf , the [] suggest that the process is a kernel process

    UIDs from 100-999 are system UIDS

        System level process will use UIDS from 100-999

    EUID -> where you have permissions to
    RUID -> who onws the process

Cron jobs for persitecne are very important for the test
persistence of the test is the most important part

Exmpales: 
find processes with the PPID of 1
    ps -elf | awk -F" " '{print $5}' | egrep "^1$" | wc -l
find the handles of process by pid, look in the fd coloumn and look for number and then letters to find order and perms
    sudo lsof -p 1427 | tail -4

Aragorn, Bruce Wayne, Eowyn, Tolken Main

Tolkien____MAIN
Eowyn
Aragorn
BruceWayne___

F S UID        PID  PPID  C PRI  NI ADDR SZ WCHAN  STIME TTY          TIME CMD
5 S root      1804     1  0  80   0 - 15916 -      Jun14 ?        00:00:00 /usr/sbin/sshd
4 S root      1894  1804  0  80   0 - 23804 -      13:35 ?        00:00:00 sshd: bombadil [priv]
5 S bombadil  1903  1894  0  80   0 - 23804 -      13:35 ?        00:00:01 sshd: bombadil@pts/1
4 S root      2944  1804  0  80   0 - 23804 -      Jun21 ?        00:00:00 sshd: bombadil [priv]
4 S root      2969  1804  0  80   0 - 23804 -      Jun21 ?        00:00:00 sshd: bombadil [priv]
5 S bombadil  2994  2944  0  80   0 - 23882 -      Jun21 ?        00:00:02 sshd: bombadil@pts/0
5 S bombadil  2995  2969  0  80   0 - 23804 -      Jun21 ?        00:00:00 sshd: bombadil@notty
0 S bombadil  2999  2995  0  80   0 -  1061 -      Jun21 ?        00:00:00 /usr/lib/openssh/sftp-server
0 S bombadil  8516  1906  0  80   0 -  3179 -      15:04 pts/1    00:00:00 grep ssh
