################################################################################################
Necissary Information
################################################################################################

xfreerdp /u:andy.dwyer /v:10.50.34.83 /dynamic-resolution +glyph-cache +clipboard
IP Address:10.50.34.83
Stack Number: 15 # The Second Octet

http://10.50.21.56:8000/challenges#Primer_CLI_1

################################################################################################
Powershell
################################################################################################
Review

  Get-Host | Select-Object -Property Version 
  5.1.17763...
  
  Cmdlets are verb-noun
  
  1)  get-verb, gets all possible verbs
  
  2)  get-command, gets all commands
        -type cmdlet | sort-object -property noun | format-table -groupby noun
        
  3) Get-Help <Cmdlet>
        -online #will bring it up online
        -examples
        
  4)  Aliases, not persistent
        Get-Alias -name <>
        Set-alias -name <ip> -value <get-netipaddress>
  
  6) Objects, have methods and attributes (properties)
      method -> action
      Property -> description, can pull information from
       
      Example Method
        (get-process).name 
        get-process | select-object name,id,path | ft
  
  7) Process
        start-process notepad.exe
        
        stop-process -name notpad
                or
        (get-process notepad).kill()
        
  8) (get-process | select-object name,id,path | where-object {$_.id -lt '1000'}).count -> get the count of processes with an id that is less than 1000
  
  9) Class
      Object is an instance of an object
      
      CIM Classess
      get-cmiclass * #gets all the cim classes available to the user
      get-ciminstance -classname win32_logicaldisk
      get-ciminstance -classname win32_logicaldisk -filter "drivetype=3" | gm
      
      get-wmiobject -class win32_logicaldisk -filter "drivetype=3"
      
      get-ciminstance -class win32_bios
  
      


################################################################################################
Windows Remoting
################################################################################################

      
  10) Get-executionpolicy -list
      anyone can run powershell 
      
      set-executionpolicy -executionpolicy unrestricted -scope Currentuser
      
  11) get-pssessionconfiguration
      get-childitem 'HKLM:\SOFTWARE\Mircrosoft\Windows NT\CurrentVersion\NetworkList\Profiles\'
      cat 1: powershell remoting enabled
      
  12) winrm get winrm/config, get winrm configurations, windows remote management
      get-item wsman:\localhost\client\Trustedhosts
      set-item wsman:\localhost\client\trustedhosts -value "file-server,domain-control
      
      
  13) invoke-command -Computername file-server {get-service} -asjob
  
  14) Receive-Job <Job #>
  
  15) $session = New-PSSession -Computername File-Server
      Invoke-Command -Session $session {get-service}
      enter-PSSession -Session $session
      
  16) Ran off of the .NET Framework

################################################################################################
Powershell Profiles
################################################################################################
  1)  test-path -path $profile.currentusercurrenthost
      test-path -path $profile.currentuserallhosts
      No profiles on the current machine
  
  2) $profile | get-member -type NoteProperty
  
  3) new-item -itemtype file -path $profile -force
  
  $) ise $profile

################################################################################################

################################################################################################


################################################################################################

################################################################################################
